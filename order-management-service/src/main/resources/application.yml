############# Application Context ###############
server:
   port: '8008'
   servlet:
      context-path: /order-management-service
   tomcat:
      max-threads: '50'
      accesslog:
         enabled: true
         prefix: order-management-service
         pattern: '%h %l %u %t "%r" %I %s %b %F %D'
         suffix: .log
         file-date-format: .yyyy-MM-dd
         rotate: true
         directory: /var/log/groyyo

########## Auth Config ##############
enable:
   cors: true
   authorize: false
   authentication: false

########## Cache Config ##############
cache:
   masterData:
      enable: false

########## Services URL's ##############
service:
   user:
      url: https://intent-multi.groyyo.com/user-service/
   masterData:
      url: https://intent-multi.groyyo.com/master-data-service
   raven:
      url: https://api.ravenapp.dev/v1
   file_management:
      url: https://intent-multi.groyyo.com/file-management-service

############## Hibernate Configuration ##############
hibernate:
   format_sql: true
   dialect: org.hibernate.dialect.PostgreSQL92Dialect
   order_inserts: true
   order_updates: true
   cache:
      provider_class: org.hibernate.cache.NoCacheProvider
   hbm2ddl:
      auto: update
   show_sql: true

################# Postgresql JDBC Connection config ###############
jdbc:
   max:
      statements: 240
      idle:
         time:
            excess:
               connections: 2
         timing: 30
      pool:
         size: '2'
   min:
      pool:
         size: '2'
   test:
      connection:
         on:
            checkin: true
   initial:
      pool:
         size: '2'
   driver:
      class:
         name: org.postgresql.Driver
   preferred:
      test:
         query: SELECT 1
   acquire:
      increment: '2'
   slave:
      url: jdbc:postgresql://localhost:5432/order_management_service?createDatabaseIfNotExist=true
      username: postgres
      password: root
   master:
      url: jdbc:postgresql://localhost:5432/order_management_service?createDatabaseIfNotExist=true
      username: postgres
      password: root
   checkout:
      timeout: '5000'

################## Kafka Properties ####################
spring:
   jpa:
      show-sql: true
      properties:
         hibernate:
            dialect: org.hibernate.dialect.PostgreSQLDialect
      hibernate:
         ddl-auto: update
      open-in-view: false
   kafka:
      consumer:
         fetch-max-wait: 100ms
         group-id: order-management-consumer-group
         enable-auto-commit: true
         auto-offset-reset: earliest
         properties:
            fetch:
               max:
                  bytes: '20971520'
            max:
               partition:
                  fetch:
                     bytes: '10485760'
         auto-commit-interval: '1000'
         max-poll-records: '200'
         fetch-min-size: '10'
      producer:
         acks: '1'
         properties:
            message:
               max:
                  bytes: '21943040'
            max:
               request:
                  size: '21943040'
         retries: '1'
      client-id: orderManagementServiceClient
      listener:
         type: batch
      admin:
         fail-fast: true
      bootstrap-servers: pkc-7prvp.centralindia.azure.confluent.cloud:9092
   application:
      name: order-management-service
   main:
      allow-circular-references: true
   profiles :
      active :
############## Kafka Topics #############
kafka:
   consumer:
      autostart: false
   base:
      topic: kafka-orderManagement-topic
   master:
      updates:
         topic: master-data-updates
   quality-management:
     topic: qc-taskAssignment-topic
   notification:
      topic :  kafka-notification-topic
############### healthcheck spring properties ###############
management:
   health:
      db:
         enabled: true
      diskspace:
         enabled: true
   endpoint:
      health:
         show-details: ALWAYS

############### package config ###############
packages:
   repository: com.groyyo.order.management.repository
   entityManager: com.groyyo.order.management.entity

debug: false

######################### multi-tenancy config #####################################
multitenancy:
   datasource-cache:
      maximumSize: 100
      expireAfterAccess: 10
   master:
      repository:
         packages: com.groyyo.core.multitenancy.multitenancy.repository
      entityManager:
         packages: com.groyyo.core.multitenancy.multitenancy.domain.entity
      datasource:
         url: jdbc:postgresql://localhost:5432/master
         username: postgres
         password: secret
      liquibase:
         enabled: false
   tenant:
      repository:
         packages: com.groyyo.order.management
      entityManager:
         packages: com.groyyo.order.management.entity
      datasource:
         url-prefix: jdbc:postgresql://localhost:5432/
         hikari:
            maximumPoolSize: 2
            minimumIdle: 0
            idleTimeout: 30000
      liquibase:
         changeLog: classpath:changelog/changelog-tenant.yaml

issuerUri: https://authdev.groyyo.com/oauth2/jwks

encryption:
   secret: verySecret
   salt: jozo

azure:
   storage:
      ConnectionString: DefaultEndpointsProtocol=https;AccountName=groyyotenantstorage;AccountKey=Z0C14b9x66WuW5VcuAgt0vKMaC7bVlxqxQXcGaoZvyaCE+ZTKuqs39BWbjQhx9wASjUn86wRbIXP+AStnElvag==;EndpointSuffix=core.windows.net